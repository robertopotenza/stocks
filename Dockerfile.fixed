# Use Python 3.12 slim image for smaller footprint
# Using Amazon ECR public registry to avoid Docker Hub authentication issues
FROM public.ecr.aws/docker/library/python:3.12-slim

# Set working directory
WORKDIR /app

# Install system dependencies for pandas/numpy and network tools
RUN apt-get update && apt-get install -y \
    gcc \
    ca-certificates \
    dnsutils \
    iputils-ping \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Upgrade pip and setup certificates
RUN pip install --upgrade pip --root-user-action=ignore

# Copy requirements first for better Docker layer caching
COPY requirements.txt .

# Install Python dependencies with trusted hosts for SSL issues
RUN pip install --no-cache-dir --root-user-action=ignore --trusted-host pypi.org --trusted-host pypi.python.org --trusted-host files.pythonhosted.org -r requirements.txt

# Copy application code
COPY . .

# Network configuration fixes
# IMPORTANT: DNS and hosts configuration should be done at runtime
# using docker-compose dns settings or --dns and --add-host flags  
# DO NOT modify /etc/resolv.conf or /etc/hosts in Docker build - they are read-only

# Create a non-root user for security
RUN useradd --create-home --shell /bin/bash app

# Change ownership of the app directory to the app user
RUN chown -R app:app /app

USER app

# Download NLTK data including VADER lexicon for sentiment analysis as the app user
# Fix SSL certificate issues by using trusted hosts and disabling SSL verification
RUN python -c "import ssl; ssl._create_default_https_context = ssl._create_unverified_context; import nltk; nltk.download('vader_lexicon', quiet=True)" || \
    python -c "import nltk; nltk.data.path.append('/app/nltk_data'); print('NLTK download failed but will attempt runtime download')"

# Set environment variables for network configuration
ENV DNS_SERVER=8.8.8.8
ENV LOG_LEVEL=INFO

# Run the application
CMD ["python", "main.py"]